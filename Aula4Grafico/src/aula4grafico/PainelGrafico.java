/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aula4grafico;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import java.util.regex.Pattern;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

 
/**
 *
 * @author m80027
 */
public class PainelGrafico extends javax.swing.JPanel implements ActionListener {
    int[] vetorIdades = new int[50];
    String fraseTela;
    int maiorIdade;
    int faixa = 5;
    
     //EscolhaDeDados ed;
      //  ExibeGrafico eg;
    /**
     * Creates new form PainelGrafico
     */
    public PainelGrafico() {
        initComponents();
        this.setSize(500,300);
        this.setVisible(false);
        this.gerarGráfico.setVisible(false);
        this.comandoFaixa.setVisible(false);
        this.jLabel1.setVisible(false);
        //ed = new EscolhaDeDados();       
        
           
        
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        voltarPainelGraficoToPrincipal = new javax.swing.JButton();
        entrarDados = new javax.swing.JButton();
        gerarGráfico = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comandoFaixa = new javax.swing.JTextField();
        comandoGrafico = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comandoPlotar = new javax.swing.JTextField();

        voltarPainelGraficoToPrincipal.setText("Voltar");
        voltarPainelGraficoToPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarPainelGraficoToPrincipalActionPerformed(evt);
            }
        });

        entrarDados.setText("Entrada de Dados");
        entrarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarDadosActionPerformed(evt);
            }
        });

        gerarGráfico.setText("Ler acomandos");
        gerarGráfico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarGráficoActionPerformed(evt);
            }
        });

        jLabel1.setText("comando faixa");

        comandoFaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comandoFaixaActionPerformed(evt);
            }
        });

        comandoGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comandoGraficoActionPerformed(evt);
            }
        });

        jLabel2.setText("comando gráfico");

        jLabel3.setText("comando plotar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(entrarDados)
                        .addGap(6, 6, 6)
                        .addComponent(gerarGráfico)
                        .addGap(18, 18, 18)
                        .addComponent(voltarPainelGraficoToPrincipal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel2)))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comandoGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comandoFaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(137, 137, 137)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(56, 56, 56)
                            .addComponent(comandoPlotar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comandoPlotar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(comandoFaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comandoGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrarDados)
                    .addComponent(gerarGráfico)
                    .addComponent(voltarPainelGraficoToPrincipal))
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void voltarPainelGraficoToPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarPainelGraficoToPrincipalActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_voltarPainelGraficoToPrincipalActionPerformed

    private void entrarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarDadosActionPerformed
            
            if( this.comandoFaixa.isVisible()){
                
                this.escnderCamposGeracaoGrafico();
            }else{
               this.mostrarCamposGeracaoGrafico();                
               
            }
           
    }//GEN-LAST:event_entrarDadosActionPerformed

    private void gerarGráficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarGráficoActionPerformed
        // TODO add your handling code here:
        this.entrarDados.setVisible(false);
        
        
        String txtPlotar =this.comandoPlotar.getText();
        String txtFaixa =this.comandoFaixa.getText();
        String txtGrafico =this.comandoGrafico.getText();
        int faixa = this.tratarTxtComandoFaixa(txtFaixa);
        int grafico = this.tratarTxtComandoTipoGrafico(txtGrafico);
       // int[] idades = this.tratarTxtComandoPlotarIdades(txtPlotar);
        
        int[] idades = new int[50];
        
        for (int i = 0; i < 49; i++) {
            Random r = new Random();
            idades[i] = r.nextInt(50);
        }
        
                
      
        
        
        this.createDataset();
        this.criaGrafico();
        this.setVisible(true);
    }//GEN-LAST:event_gerarGráficoActionPerformed

    private void comandoFaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comandoFaixaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comandoFaixaActionPerformed

    private void comandoGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comandoGraficoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comandoGraficoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField comandoFaixa;
    public javax.swing.JTextField comandoGrafico;
    public javax.swing.JTextField comandoPlotar;
    public javax.swing.JButton entrarDados;
    public javax.swing.JButton gerarGráfico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JButton voltarPainelGraficoToPrincipal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public CategoryDataset createDataset() {

        int faixa = 5;
        int maiorIdade =50;
       
        //String[] idades = fraseTela.split (";");
        String fraseTela = "1;50;5;10;15;20;30;45;33;14";
        int range = maiorIdade / faixa;
        
        
        String[] idades = fraseTela.split (";");
        //prepara vetor idades
        for (int i = 0; i < idades.length; i++) {
              vetorIdades[i] = Integer.parseInt(idades[i]);
        }       
              
        //prepara vetor range
        int[][] vetRanges = new int[faixa][3];
        int x = 0; 
        for (int i = 0; i < maiorIdade; i = range +i) {         
             vetRanges[x][0]=i;//limite inferior
             vetRanges[x][1]=i+range;//limitesuperior
             x++;                
        } 
        
        //prepara vetor Valores dos Ranges               
        for (int i = 0 ; vetRanges[i][1] < maiorIdade; i++) {  
            for (int j = 0; vetorIdades[j]>0 ; j++) {
                    //valorIdade     //limiteInferior    //valorIdade    //limiteSuperior
                if(vetRanges[i][0] < vetorIdades[j]  && vetRanges[i][1] >=  vetorIdades[j]){
                    vetRanges[i][2]= vetRanges[i][2]+1 ;
                }            
            }  
                          
        }
 
        
         //dataset.addValue(1000.0,"01/2012","Mês/Ano");
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < faixa; i++) {
          String ranges = " "+vetRanges[i][0]+" - "+" "+vetRanges[i][1]+" ";
          dataset.addValue(vetRanges[i][2],ranges,"numero/rangeIdade");
                  // dataset.addValue(vetRanges[i][2],""++"","Idade/Quantitdade");
        
        }
    
       

        return dataset;

    }
    
    
   public void criaGrafico() {
        CategoryDataset cds = createDataset();
        String titulo = "Gráfico de Teste";
        String eixoy = "Valores";
        String txt_legenda = "Ledenda:";
        boolean legenda = true;
        boolean tooltips = true;
        boolean urls = true;
        JFreeChart graf = ChartFactory.createBarChart3D(titulo, txt_legenda, eixoy, cds, PlotOrientation.VERTICAL, legenda, tooltips, urls);
        ChartPanel myChartPanel = new ChartPanel(graf, true);
        myChartPanel.setSize(500, 300);
        myChartPanel.setVisible(true);
        this.removeAll();
        this.add(myChartPanel);
        this.revalidate();
        this.repaint();
    }

   
   public void mostrarCamposGeracaoGrafico(){
       
                this.entrarDados.setVisible(true);
                this.jLabel1.setVisible(true);
                this.gerarGráfico.setVisible(true);
                this.comandoFaixa.setVisible(true);
   }
   
     public void escnderCamposGeracaoGrafico(){
       
               // this.entrarDados.setVisible(false);
                this.jLabel1.setVisible(false);
               // this.gerarGráfico.setVisible(false);
                this.comandoFaixa.setVisible(false);
   }     
     
    public int tratarTxtComandoFaixa(String txt) {
        int intFaixa = txt.indexOf("faixa")+5;
        //int intFaixa = posFaixa +1;
        int valorFaixa =5;// Integer.parseInt(txt.substring(intFaixa, intFaixa+1)); 
        
        return valorFaixa;
    }
    
     public int tratarTxtComandoTipoGrafico(String txt) {
        int intGrafico = txt.indexOf("grafico")+7;
        //int intFaixa = posFaixa +1;
        int valorGrafico = 1;//Integer.parseInt(txt.substring(intGrafico, intGrafico+1)); 
        
        return valorGrafico;
    }

    public int[] tratarTxtComandoPlotarIdades(String txtPlotar) {
       
        int idades[] = new int[50];
        int i =0;
       /* while(txtPlotar.indexOf(txtPlotar)!= -1){
            while(){
                int idade = txtPlotar.indexOf(";")-2;
                txtPlotar.sp
                txtPlotar.replaceFirst(";", "*");
                idades[i] = idade;
            }
        }*/
        
        return idades;
    }
  
}
